<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="customer_master_medicine_table" targetNamespace="http://tempuri.org/customer_master_medicine_table.xsd" xmlns:mstns="http://tempuri.org/customer_master_medicine_table.xsd" xmlns="http://tempuri.org/customer_master_medicine_table.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="MySettings" AppSettingsPropertyName="customer_masterConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="customer_masterConnectionString (MySettings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Application.My.MySettings.GlobalReference.Default.customer_masterConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="medicine_TableTableAdapter" GeneratorDataComponentClassName="medicine_TableTableAdapter" Name="medicine_Table" UserDataComponentName="medicine_TableTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="customer_masterConnectionString (MySettings)" DbObjectName="customer_master.dbo.medicine_Table" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[medicine_Table] WHERE (([id] = @Original_id) AND ([Medicine Name] = @Original_Medicine_Name) AND ([Stock Available] = @Original_Stock_Available) AND ([Price/strip] = @p2))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Medicine_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Medicine Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_Stock_Available" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="Stock Available" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@p2" Precision="10" ProviderType="Decimal" Scale="2" Size="0" SourceColumn="Price/strip" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[medicine_Table] ([Medicine Name], [Stock Available], [Price/strip]) VALUES (@Medicine_Name, @Stock_Available, @p1);
SELECT id, [Medicine Name], [Stock Available], [Price/strip] FROM medicine_Table WHERE (id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Medicine_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Medicine Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Stock_Available" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="Stock Available" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@p1" Precision="10" ProviderType="Decimal" Scale="2" Size="0" SourceColumn="Price/strip" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT id, [Medicine Name], [Stock Available], [Price/strip] FROM dbo.medicine_Table</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[medicine_Table] SET [Medicine Name] = @Medicine_Name, [Stock Available] = @Stock_Available, [Price/strip] = @p1 WHERE (([id] = @Original_id) AND ([Medicine Name] = @Original_Medicine_Name) AND ([Stock Available] = @Original_Stock_Available) AND ([Price/strip] = @p2));
SELECT id, [Medicine Name], [Stock Available], [Price/strip] FROM medicine_Table WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Medicine_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Medicine Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Stock_Available" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="Stock Available" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@p1" Precision="10" ProviderType="Decimal" Scale="2" Size="0" SourceColumn="Price/strip" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Medicine_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Medicine Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_Stock_Available" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="Stock Available" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@p2" Precision="10" ProviderType="Decimal" Scale="2" Size="0" SourceColumn="Price/strip" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="id" DataSourceName="customer_master.dbo.medicine_Table" DataTypeServer="bigint" DbType="Int64" Direction="Input" ParameterName="@id" Precision="0" ProviderType="BigInt" Scale="0" Size="8" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id" DataSetColumn="id" />
              <Mapping SourceColumn="Medicine Name" DataSetColumn="Medicine Name" />
              <Mapping SourceColumn="Stock Available" DataSetColumn="Stock Available" />
              <Mapping SourceColumn="Price/strip" DataSetColumn="Price/strip" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="customer_master_medicine_table" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_UserDSName="customer_master_medicine_table" msprop:Generator_DataSetName="customer_master_medicine_table">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="medicine_Table" msprop:Generator_RowEvHandlerName="medicine_TableRowChangeEventHandler" msprop:Generator_RowDeletedName="medicine_TableRowDeleted" msprop:Generator_RowDeletingName="medicine_TableRowDeleting" msprop:Generator_RowEvArgName="medicine_TableRowChangeEvent" msprop:Generator_TablePropName="medicine_Table" msprop:Generator_RowChangedName="medicine_TableRowChanged" msprop:Generator_RowChangingName="medicine_TableRowChanging" msprop:Generator_TableClassName="medicine_TableDataTable" msprop:Generator_RowClassName="medicine_TableRow" msprop:Generator_TableVarName="tablemedicine_Table" msprop:Generator_UserTableName="medicine_Table">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_UserColumnName="id" type="xs:long" />
              <xs:element name="Medicine_x0020_Name" msprop:Generator_ColumnPropNameInRow="Medicine_Name" msprop:Generator_ColumnPropNameInTable="Medicine_NameColumn" msprop:Generator_ColumnVarNameInTable="columnMedicine_Name" msprop:Generator_UserColumnName="Medicine Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Stock_x0020_Available" msprop:Generator_ColumnPropNameInRow="Stock_Available" msprop:Generator_ColumnPropNameInTable="Stock_AvailableColumn" msprop:Generator_ColumnVarNameInTable="columnStock_Available" msprop:Generator_UserColumnName="Stock Available" type="xs:long" />
              <xs:element name="Price_x002F_strip" msprop:Generator_ColumnPropNameInRow="_Price_strip" msprop:Generator_ColumnPropNameInTable="_Price_stripColumn" msprop:Generator_ColumnVarNameInTable="_columnPrice_strip" msprop:Generator_UserColumnName="Price/strip" type="xs:decimal" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:medicine_Table" />
      <xs:field xpath="mstns:id" />
    </xs:unique>
  </xs:element>
</xs:schema>